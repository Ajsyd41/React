pipeline
 {
    agent {
          docker {
            image 'node:18.17.1-alpine3.18 '
            args '-p 3000:3000 -u 0:0 -v /var/lib/jenkins/workspace/Docker-React/node-modules:/temp/'
			reuseNode true
        }
	}      
  stages {
  
    stage('Build') {
      steps {
        script{
			sh 'npm install'
        }
      }
    }
    stage('Unit Test') {
          steps {
           sh 'npm run test'
          }
        }
		
	 stage('Sonar Analysis'){
        steps{
          script{
             withSonarQubeEnv('sonarqube-demo') {
                // sh 'npx sonarqube-scanner'
                 sh "/temp/sonar-scanner-5.0.1.3006-linux/bin/sonar-scanner"
             }
          }
       }
     }
//      stage("Quality Gate"){
// 	 steps
// 	 {
//         timeout(time: 1, unit: 'HOURS') {
//          script{
//            def qg = waitForQualityGate() 
//               if (qg.status != 'OK') {
//                 error "Pipeline aborted due to quality gate failure: ${qg.status}"
//            }
//          }
// 	  	}
// 	  }
//  }
	// stage('SCA analysis') {
  //       steps {
  //              sh 'npx @cyclonedx/cyclonedx-npm --output-file src/bom.xml --validate'
  //       }
  //    }
	//   stage('dependencyTrackPublisher') {
  //           steps {
  //               withCredentials([string(credentialsId: 'sca-key', variable: 'API_KEY')]) {
  //                   dependencyTrackPublisher artifact: 'target/bom.xml', projectName: 'My-Maven-Project', projectVersion: 'my-version', synchronous: true, dependencyTrackApiKey: API_KEY
  //               }
  //           }
  //       }
    }
	post {
        always {
            cleanWs()
        }
    }
}  
		 
    